// <auto-generated />
using System;
using ExcelTemplateSystem.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ExcelTemplateSystem.Data.Migrations
{
    [DbContext(typeof(ExcelTemplateSystemContext))]
    partial class ExcelTemplateSystemContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ExcelTemplateSystem.Data.Entities.DocumentData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("SubmittedDocumentId")
                        .HasColumnType("int");

                    b.Property<int>("TemplateColumnId")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("SubmittedDocumentId");

                    b.HasIndex("TemplateColumnId");

                    b.ToTable("DocumentData");
                });

            modelBuilder.Entity("ExcelTemplateSystem.Data.Entities.DocumentHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ActionBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ActionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SubmittedDocumentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SubmittedDocumentId");

                    b.ToTable("DocumentHistories");
                });

            modelBuilder.Entity("ExcelTemplateSystem.Data.Entities.DocumentTemplate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Version")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DocumentTemplates");
                });

            modelBuilder.Entity("ExcelTemplateSystem.Data.Entities.SubmittedDocument", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DocumentTemplateId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubmittedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("SubmittedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UniqueIdentifier")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DocumentTemplateId");

                    b.ToTable("SubmittedDocuments");
                });

            modelBuilder.Entity("ExcelTemplateSystem.Data.Entities.TemplateColumn", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ColumnName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DataType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DefaultValue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DocumentTemplateId")
                        .HasColumnType("int");

                    b.Property<bool>("IsRequired")
                        .HasColumnType("bit");

                    b.Property<int?>("MaxLength")
                        .HasColumnType("int");

                    b.Property<decimal?>("MaxValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("MinValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ValidationRegex")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DocumentTemplateId");

                    b.ToTable("TemplateColumns");
                });

            modelBuilder.Entity("ExcelTemplateSystem.Data.Entities.DocumentData", b =>
                {
                    b.HasOne("ExcelTemplateSystem.Data.Entities.SubmittedDocument", "SubmittedDocument")
                        .WithMany("Data")
                        .HasForeignKey("SubmittedDocumentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ExcelTemplateSystem.Data.Entities.TemplateColumn", "TemplateColumn")
                        .WithMany("DocumentData")
                        .HasForeignKey("TemplateColumnId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("SubmittedDocument");

                    b.Navigation("TemplateColumn");
                });

            modelBuilder.Entity("ExcelTemplateSystem.Data.Entities.DocumentHistory", b =>
                {
                    b.HasOne("ExcelTemplateSystem.Data.Entities.SubmittedDocument", "SubmittedDocument")
                        .WithMany("History")
                        .HasForeignKey("SubmittedDocumentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SubmittedDocument");
                });

            modelBuilder.Entity("ExcelTemplateSystem.Data.Entities.SubmittedDocument", b =>
                {
                    b.HasOne("ExcelTemplateSystem.Data.Entities.DocumentTemplate", "DocumentTemplate")
                        .WithMany("SubmittedDocuments")
                        .HasForeignKey("DocumentTemplateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DocumentTemplate");
                });

            modelBuilder.Entity("ExcelTemplateSystem.Data.Entities.TemplateColumn", b =>
                {
                    b.HasOne("ExcelTemplateSystem.Data.Entities.DocumentTemplate", "DocumentTemplate")
                        .WithMany("Columns")
                        .HasForeignKey("DocumentTemplateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DocumentTemplate");
                });

            modelBuilder.Entity("ExcelTemplateSystem.Data.Entities.DocumentTemplate", b =>
                {
                    b.Navigation("Columns");

                    b.Navigation("SubmittedDocuments");
                });

            modelBuilder.Entity("ExcelTemplateSystem.Data.Entities.SubmittedDocument", b =>
                {
                    b.Navigation("Data");

                    b.Navigation("History");
                });

            modelBuilder.Entity("ExcelTemplateSystem.Data.Entities.TemplateColumn", b =>
                {
                    b.Navigation("DocumentData");
                });
#pragma warning restore 612, 618
        }
    }
}
